<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huiji.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.huiji.po.Employee">
    <id column="EMP_ID" jdbcType="DECIMAL" property="empId" />
    <result column="EMP_NAME" jdbcType="VARCHAR" property="empName" />
    <result column="GENDER" jdbcType="CHAR" property="gender" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="D_ID" jdbcType="DECIMAL" property="dId" />
  </resultMap>
  
  <resultMap type="com.huiji.po.Employee" id="WithDeptResultMap">
  	<id column="EMP_ID" jdbcType="DECIMAL" property="empId" />
    <result column="EMP_NAME" jdbcType="VARCHAR" property="empName" />
    <result column="GENDER" jdbcType="CHAR" property="gender" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="D_ID" jdbcType="DECIMAL" property="dId" />
    <association property="department" javaType="com.huiji.po.Department">
    	<id column="dept_id" jdbcType="DECIMAL" property="deptId" />
    	<result column="dept_name" jdbcType="VARCHAR" property="deptName" />	
    </association>
  </resultMap>
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EMP_ID, EMP_NAME, GENDER, EMAIL, D_ID
  </sql>
   <!-- 两个表的字段 -->
  <sql id="WithDept_Column_List">
  	e.emp_id, e.emp_name, e.gender, e.email, e.d_id, d.dept_id, d.dept_name
  </sql>
  
  <!-- List<Employee> selectByExampleWithDept(EmployeeExample example);-->
  <!-- Employee selectByPrimaryKeyWithDept(Long empId); -->
	<!-- 查询员工，同时带上部门信息 -->
    <select id="selectByExampleWithDept" resultMap="WithDeptResultMap">
	    select
	    <if test="distinct">
	      distinct
	    </if>
	    <include refid="WithDept_Column_List" />
	    from tbl_emp e
		left join tbl_dept d on e.d_id=d.dept_id
	    <if test="_parameter != null">
	      <include refid="Example_Where_Clause" />
	    </if>
	    <if test="orderByClause != null">
	      order by ${orderByClause}
	    </if>
  	</select>
	<select id="selectByPrimaryKeyWithDept" resultMap="WithDeptResultMap" >
		select 
	    <include refid="WithDept_Column_List" />
	    from tbl_emp e
		left join tbl_dept d on e.d_id=d.dept_id 
	    where EMP_ID = #{empId,jdbcType=DECIMAL}
	</select>  
  
  
  <select id="selectByExample" parameterType="com.huiji.po.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TBL_EMP
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from TBL_EMP
    where EMP_ID = #{empId,jdbcType=DECIMAL}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from TBL_EMP
    where EMP_ID = #{empId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.huiji.po.EmployeeExample">
    delete from TBL_EMP
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huiji.po.Employee">
    insert into TBL_EMP (EMP_ID, EMP_NAME, GENDER, 
      EMAIL, D_ID)
    values (#{empId,jdbcType=DECIMAL}, #{empName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{dId,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.huiji.po.Employee">
    insert into TBL_EMP
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        EMP_ID,
      </if>
      <if test="empName != null">
        EMP_NAME,
      </if>
      <if test="gender != null">
        GENDER,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="dId != null">
        D_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=DECIMAL},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="dId != null">
        #{dId,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huiji.po.EmployeeExample" resultType="java.lang.Long">
    select count(*) from TBL_EMP
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update TBL_EMP
    <set>
      <if test="record.empId != null">
        EMP_ID = #{record.empId,jdbcType=DECIMAL},
      </if>
      <if test="record.empName != null">
        EMP_NAME = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        GENDER = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.dId != null">
        D_ID = #{record.dId,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update TBL_EMP
    set EMP_ID = #{record.empId,jdbcType=DECIMAL},
      EMP_NAME = #{record.empName,jdbcType=VARCHAR},
      GENDER = #{record.gender,jdbcType=CHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      D_ID = #{record.dId,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huiji.po.Employee">
    update TBL_EMP
    <set>
      <if test="empName != null">
        EMP_NAME = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        GENDER = #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="dId != null">
        D_ID = #{dId,jdbcType=DECIMAL},
      </if>
    </set>
    where EMP_ID = #{empId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huiji.po.Employee">
    update TBL_EMP
    set EMP_NAME = #{empName,jdbcType=VARCHAR},
      GENDER = #{gender,jdbcType=CHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      D_ID = #{dId,jdbcType=DECIMAL}
    where EMP_ID = #{empId,jdbcType=DECIMAL}
  </update>
  
  <select id="selectEmpId" resultType="Long">
  	select max(emp_id)+1 from tbl_emp
  </select>
</mapper>