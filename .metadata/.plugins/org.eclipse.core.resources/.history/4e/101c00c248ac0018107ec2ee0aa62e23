package com.kaisn.https;

import java.net.URL;
import java.security.SecureRandom;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.KeyManager;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSession;
import javax.net.ssl.SSLSocketFactory;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.conn.ssl.DefaultHostnameVerifier;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;  
/* 
 * 利用HttpClient进行post请求的工具类 
 */  
public class HttpClientUtil {  
    public String doPost(String url,Map<String,String> map,String charset){
    	
    	
    	SSLContext ctx = SSLContext.getInstance("TLSv1.2");
    	ctx.init(new KeyManager[0], new ClientTrustManager[]{new ClientTrustManager("", "", "")}, new SecureRandom());
    	SSLContext.setDefault(ctx);
    	
    	SSLSocketFactory ssf = ctx.getSocketFactory();
    	URL url2 = new URL(url);
    	HttpsURLConnection conn = (HttpsURLConnection) url2.openConnection();
    	conn.setHostnameVerifier(new HostnameVerifier() {
			
			public boolean verify(String hostName, SSLSession sesion) {
				DefaultHostnameVerifier hostnameVerifier = new DefaultHostnameVerifier();
				Certificate[] certificates = sesion.getPeerCertificates();
				X509Certificate certificate = (X509Certificate)certificates[0];
				hostnameVerifier.verify(hostName, certificate);
				return false;
			}
		});
    	conn.setSSLSocketFactory(ssf);
    	conn.setRequestMethod("POST");
    	conn.setConnectTimeout(15000);
    	conn.setReadTimeout(15000);
    	
    	HttpClient httpClient = null;  
        HttpPost httpPost = null;  
        String result = null;  
        try{  
            httpClient = (HttpClient) new ClientTrustManager();  
            httpPost = new HttpPost(url);  
            //设置参数  
            List<NameValuePair> list = new ArrayList<NameValuePair>();  
            Iterator<?> iterator = map.entrySet().iterator();  
            while(iterator.hasNext()){  
                Entry<String,String> elem = (Entry<String, String>) iterator.next();  
                list.add(new BasicNameValuePair(elem.getKey(),elem.getValue()));  
            }  
            if(list.size() > 0){  
                UrlEncodedFormEntity entity = new UrlEncodedFormEntity(list,charset);  
                httpPost.setEntity(entity);  
            }  
            HttpResponse response = httpClient.execute(httpPost);  
            if(response != null){  
                HttpEntity resEntity = response.getEntity();  
                if(resEntity != null){  
                    result = EntityUtils.toString(resEntity,charset);  
                }  
            }  
        }catch(Exception ex){  
            ex.printStackTrace();  
        }  
        return result;  
    }  
}