package com.kaisn.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.kaisn.pojo.Employee;
import com.kaisn.pojo.Msg;
import com.kaisn.service.EmployeeService;

@Controller
@RequestMapping(value = "/emp")
public class EmployeeController {

	@Autowired
	EmployeeService employeeService;

	@RequestMapping(value = "/list", method = RequestMethod.GET)
	@ResponseBody
	public Msg getEmployeeList(HttpServletRequest request, HttpServletResponse response) {
		List<Employee> empList = null;
		try {
			empList = employeeService.getEmployeeList();
		} catch (Exception e) {
			return Msg.fail();
		}
		return Msg.success().add("list", empList);
	}

	@RequestMapping(value = "/list/{curPage}", method = RequestMethod.GET)
	@ResponseBody
	public Msg getEmployeeLists(@PathVariable("curPage") int curPage, HttpServletRequest request,
			HttpServletResponse response) {
		PageInfo<Employee> page = null;
		try {
			PageHelper.startPage(curPage, 10);// 10表示每页条数
			List<Employee> empList = employeeService.getEmployeeList();
			page = new PageInfo<Employee>(empList, 5); // 5表示要连续显示的页数
		} catch (Exception e) {
			return Msg.fail();
		}
		return Msg.success().add("pageInfo", page);
	}

	@RequestMapping(value = "/checkName", method = RequestMethod.POST)
	@ResponseBody
	public Msg checkEmpName(@RequestParam("empName") String empName, HttpServletRequest request,
			HttpServletResponse response) {
		boolean isExist = false;
		try {
			isExist = employeeService.isExistEmpName(empName);
		} catch (Exception e) {
			return Msg.fail();
		}
		return Msg.success().add("isExist", isExist);
	}

	@RequestMapping(value = "/save", method = RequestMethod.POST)
	@ResponseBody
	public Msg saveEmployee(@Valid Employee employee, BindingResult result, HttpServletRequest request,
			HttpServletResponse response) {
		try {
			if (result.hasErrors()) {
				Map<String, Object> resultMap = new HashMap<String, Object>();
				List<FieldError> fieldErrors = result.getFieldErrors();
				for (FieldError fieldError : fieldErrors) {
					resultMap.put(fieldError.getField(), fieldError.getDefaultMessage());
				}
				return Msg.fail().add("errorFields", resultMap);
			} else {
				employeeService.saveEmployee(employee);
			}
		} catch (Exception e) {
			return Msg.fail();
		}
		return Msg.success();
	}

	@RequestMapping(value = "/dels", method = RequestMethod.DELETE)
	@ResponseBody
	public Msg delEmployee(@RequestBody String[] empIds, HttpServletRequest request, HttpServletResponse response) {
		try {
			employeeService.delEmployee(empIds);
		} catch (Exception e) {
			return Msg.fail();
		}
		return Msg.success();
	}
	
	@RequestMapping(value = "/info/{empId}", method = RequestMethod.GET)
	@ResponseBody
	public Msg getEmployeeInfo(@PathVariable("empId") Long empId, HttpServletRequest request,
			HttpServletResponse response) {
		Employee employee = null;
		try {
			employee = employeeService.getEmployeeInfo(empId);
		} catch (Exception e) {
			return Msg.fail();
		}
		return Msg.success().add("emp", employee);
	}
	
	@RequestMapping(value = "/update", method = RequestMethod.GET)
	@ResponseBody
	public Msg updateEmployee(@Valid Employee employee, BindingResult result, HttpServletRequest request,
			HttpServletResponse response) {
		try {
			employeeService.updateEmployee(employee);
		} catch (Exception e) {
			return Msg.fail();
		}
		return Msg.success();
	}
}
